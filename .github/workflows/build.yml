name: build

on:
  push:
    branches: [ "master", "develop" ]
    tags:
    - 'v*'
  pull_request:
    branches: [ "master", "develop" ]

env:
  BUILD_TYPE: Release
  FLASHER_BIN: FLASHER.BIN
  LAUNCHER_BIN: LAUNCHER.BIN
  BASICROM_BIN: BASICBOOTSTRAP.BIN

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

################################################################################
# LAUNCHER
################################################################################

  # Launcher for the SLOT2 cartridge
  build-launcher:
    runs-on: ubuntu-latest
    container: 
      image: z88dk/z88dk

    steps:
    - uses: actions/checkout@v3
    - name: Build launcher application
      run: |
        cd src
        sed -i 's/node[[:digit:]]\+/node2000000/g' Makefile
        make launcher
        ls -alh LAUNCHER*
    - name: Upload launcher
      uses: actions/upload-artifact@v4
      with:
        name: LAUNCHER-UNSIGNED
        path: src/${{env.LAUNCHER_BIN}}

  sign-launcher:
    runs-on: ubuntu-latest
    needs: [build-launcher]
    permissions: write-all
    steps:
    - name: Install dependencies
      run: sudo apt install -y cmake build-essential libtclap-dev libboost-all-dev git
    - name: Download repository
      run: git clone https://github.com/ifilot/crc16sign.git --depth 1
    - name: build crc16sign
      run: |
        cd crc16sign
        mkdir build
        cd build
        cmake ../src
        make -j
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: LAUNCHER-UNSIGNED
        path: ./
    - name: Sign binary
      run: |
        crc16sign/build/crc16sign -i ${{env.LAUNCHER_BIN}} -o ${{env.LAUNCHER_BIN}} -s
    - name: Upload launcher
      uses: actions/upload-artifact@v4
      with:
        name: LAUNCHER
        path: ${{env.LAUNCHER_BIN}}

  deploy-launcher:
    runs-on: ubuntu-latest
    needs: [build-launcher, create-release, sign-launcher]
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download LAUNCHER
      uses: actions/download-artifact@v4
      with:
        name: LAUNCHER
        path: ./
    - name: Upload Release Asset
      id: upload-release-asset-launcher
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{env.LAUNCHER_BIN}}
        asset_name: LAUNCHER.BIN
        asset_content_type: application/octet-stream

################################################################################
# FLASHER
################################################################################

  build-flasher:
    runs-on: ubuntu-latest
    container: 
      image: z88dk/z88dk

    steps:
    - uses: actions/checkout@v3
    - name: Build launcher application
      run: |
        cd src
        sed -i 's/node[[:digit:]]\+/node2000000/g' Makefile
        make flasher
        ls -alh FLASHER*
    - name: Upload flasher
      uses: actions/upload-artifact@v4
      with:
        name: FLASHER
        path: src/${{env.FLASHER_BIN}}

  deploy-flasher:
    runs-on: ubuntu-latest
    needs: [build-flasher, create-release]
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: FLASHER
        path: ./
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{env.FLASHER_BIN}}
        asset_name: FLASHER.BIN
        asset_content_type: application/octet-stream

################################################################################
# MODIFIED BASIC CARTRIDGE
################################################################################

  build-basic:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: sudo apt install -y python3 z80asm make
    - name: Build modified basic cartridge
      run: |
        cd basicmod
        make
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: BASICBOOTSTRAP
        path: basicmod/${{env.BASICROM_BIN}}

  deploy-basic-cartridge:
    runs-on: ubuntu-latest
    needs: [build-basic, create-release]
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: BASICBOOTSTRAP
        path: ./
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{env.BASICROM_BIN}}
        asset_name: BASICBOOTSTRAP.BIN
        asset_content_type: application/octet-stream