name: build

on:
  push:
    branches: [ "master", "develop" ]
    tags:
    - 'v*'
  pull_request:
    branches: [ "master", "develop" ]

env:
  BUILD_TYPE: Release
  FLASHER_BIN: FLASHER.BIN
  LAUNCHER_BIN: LAUNCHER.BIN
  BASICROM_BIN: BASICBOOTSTRAP.BIN
  MULTIROM_BIN: MULTIROM.BIN

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

################################################################################

  # Launcher for the SLOT2 cartridge
  build-launcher:
    runs-on: ubuntu-latest
    container: 
      image: z88dk/z88dk

    steps:
    - uses: actions/checkout@v3
    - name: Build launcher application
      run: |
        cd src
        sed -i 's/node20000/node2000000/g' Makefile
        make launcher
    - name: Upload launcher
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.LAUNCHER_BIN}}
        path: src/${{env.LAUNCHER_BIN}}

  create-checksums:
    runs-on: ubuntu-latest
    needs: [build-launcher]
    permissions: write-all
    steps:
    - name: Install dependencies
      run: sudo apt install -y python3 python3-numpy
    - uses: actions/checkout@v3
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{env.LAUNCHER_BIN}}
        path: ./
    - name: Create the CRC-16 checksums
      run: python3 src/checksums.py ${{env.LAUNCHER_BIN}} > launcher-checksum.txt
    - name: Upload checksums
      uses: actions/upload-artifact@v3
      with:
        name: launcher-checksum.txt
        path: launcher-checksum.txt

  deploy-launcher:
    runs-on: ubuntu-latest
    needs: [build-launcher, create-checksums, create-release]
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download LAUNCHER
      uses: actions/download-artifact@v3
      with:
        name: ${{env.LAUNCHER_BIN}}
        path: ./
    - name: Upload Release Asset
      id: upload-release-asset-launcher
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{env.LAUNCHER_BIN}}
        asset_name: ${{env.LAUNCHER_BIN}}
        asset_content_type: application/octet-stream
    - name: Download launcher-checksum.txt
      uses: actions/download-artifact@v3
      with:
        name: launcher-checksum.txt
        path: ./
    - name: Upload Release Asset
      id: upload-release-asset-checksums
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: launcher-checksum.txt
        asset_name: launcher-checksum.txt
        asset_content_type: text/plain

################################################################################

  # Flasher for the SLOT2 cartridge
  build-flasher:
    runs-on: ubuntu-latest
    container: 
      image: z88dk/z88dk

    steps:
    - uses: actions/checkout@v3
    - name: Build launcher application
      run: |
        cd src
        sed -i 's/node2000/node200000/' Makefile
        make flasher
    - name: Upload flasher
      uses: actions/upload-artifact@v3
      with:
        name: ${{env.FLASHER_BIN}}
        path: src/${{env.FLASHER_BIN}}

  deploy-flasher:
    runs-on: ubuntu-latest
    needs: [build-flasher, create-release]
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{env.FLASHER_BIN}}
        path: ./
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{env.FLASHER_BIN}}
        asset_name: ${{env.FLASHER_BIN}}
        asset_content_type: application/octet-stream

################################################################################

  # Modified BASIC cartridge
  build-basic:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: sudo apt install -y python3 python3-numpy z80asm make
    - name: Build modified basic cartridge
      run: |
        cd basicmod
        z80asm bootstrap.asm -o bootstrap.bin
        z80asm launcher.asm -o launcher.bin
        python hackrom.py
    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        name: ${{env.BASICROM_BIN}}
        path: basicmod/${{env.BASICROM_BIN}}

  deploy-basic-cartridge:
    runs-on: ubuntu-latest
    needs: [build-basic, create-release]
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{env.BASICROM_BIN}}
        path: ./
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{env.BASICROM_BIN}}
        asset_name: ${{env.BASICROM_BIN}}
        asset_content_type: application/octet-stream

################################################################################

  # Multirom cartridge
  build-multirom:
    runs-on: ubuntu-latest
    needs: [build-basic, build-flasher]
    steps:
    - name: Install dependencies
      run: sudo apt install -y wget
    - uses: actions/checkout@v3
    - name: Download modified BASIC rom
      uses: actions/download-artifact@v3
      with:
        name: ${{env.BASICROM_BIN}}
        path: ./
    - name: Download flasher
      uses: actions/download-artifact@v3
      with:
        name: ${{env.FLASHER_BIN}}
        path: ./
    - name: Build modified basic cartridge
      run: |
        wget https://github.com/ifilot/p2000t-ram-expansion-board/releases/latest/download/RAMTEST.BIN
        truncate -s 16k ${{env.BASICROM_BIN}}
        truncate -s 16k ${{env.FLASHER_BIN}}
        cat ${{env.BASICROM_BIN}} ${{env.FLASHER_BIN}} RAMTEST.BIN basicmod/BASICROM.BIN > MULTIROM.BIN
    - name: Upload
      uses: actions/upload-artifact@v1
      with:
        name: ${{env.MULTIROM_BIN}}
        path: ${{env.MULTIROM_BIN}}

  deploy-multirom:
    runs-on: ubuntu-latest
    needs: [build-multirom, create-release]
    permissions: write-all
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{env.MULTIROM_BIN}}
        path: ./
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{env.MULTIROM_BIN}}
        asset_name: ${{env.MULTIROM_BIN}}
        asset_content_type: application/octet-stream
